//
//  AppDelegate.m
//  1yqb
//
//  Created by 曲天白 on 15/12/11.
//  Copyright © 2015年 乙科网络. All rights reserved.
//

#import "NetWorkTool.h"


@implementation NetWorkTool

//将NSDictionary中的Null类型的项目转化成@""
+(NSDictionary *)nullDic:(NSDictionary *)myDic
{
    NSArray *keyArr = [myDic allKeys];
    NSMutableDictionary *resDic = [[NSMutableDictionary alloc]init];
    for (int i = 0; i < keyArr.count; i ++)
    {
        id obj = [myDic objectForKey:keyArr[i]];
        
        obj = [self changeType:obj];
        
        [resDic setObject:obj forKey:keyArr[i]];
    }
    return resDic;
}

//将NSArray中的Null类型的项目转化成@""
+(NSArray *)nullArr:(NSArray *)myArr
{
    NSMutableArray *resArr = [[NSMutableArray alloc] init];
    for (int i = 0; i < myArr.count; i ++)
    {
        id obj = myArr[i];
        
        obj = [self changeType:obj];
        
        [resArr addObject:obj];
    }
    return resArr;
}

//将NSString类型的原路返回
+(NSString *)stringToString:(NSString *)string
{
    return string;
}

//将Null类型的项目转化成@""
+(NSString *)nullToString
{
    return @"";
}

#pragma mark - 公有方法
//类型识别:将所有的NSNull类型转化成@""
+(id)changeType:(id)myObj
{
    if ([myObj isKindOfClass:[NSDictionary class]])
    {
        return [self nullDic:myObj];
    }
    else if([myObj isKindOfClass:[NSArray class]])
    {
        return [self nullArr:myObj];
    }
    else if([myObj isKindOfClass:[NSString class]])
    {
        return [self stringToString:myObj];
    }
    else if([myObj isKindOfClass:[NSNull class]])
    {
        return [self nullToString];
    }
    else
    {
        return myObj;
    }
}
/**
 *  数组转json
 *
 *  @param arr 数组
 *
 *  @return 数组json
 */
+ (NSString *)NSArrayTojson:(NSArray *)arr{
    NSError *parseError   = nil;
    
    NSData *jsonData      = [NSJSONSerialization dataWithJSONObject:arr options:NSJSONWritingPrettyPrinted error:&parseError];
    return [[NSString alloc] initWithData:jsonData encoding:NSUTF8StringEncoding];
}
/**
 *  json 转 字典
 *
 *  @param jsonStr json
 *
 *  @return 数组
 */
+ (NSDictionary *)dictionaryWithJsonString:(NSString *)jsonStr{
    if (jsonStr == nil) {
        return nil;
    }
    NSData *jsonData      = [jsonStr dataUsingEncoding:NSUTF8StringEncoding];
    NSError *error;
    NSDictionary *dic     = [NSJSONSerialization JSONObjectWithData:jsonData options:NSJSONReadingMutableContainers error:&error];
    return dic;
}
/**
 * 字典转json
 */
+ (NSString*)dictionaryToJson:(NSDictionary *)dic {
    
    NSError *parseError   = nil;
    
    NSData *jsonData      = [NSJSONSerialization dataWithJSONObject:dic options:NSJSONWritingPrettyPrinted error:&parseError];
    
    return [[NSString alloc] initWithData:jsonData encoding:NSUTF8StringEncoding];
    
}
/**
 *  json 转 数组
 *
 *  @param jsonStr json
 *
 *  @return 数组
 */
+(NSArray *)arrayWithjsonString:(NSString *)jsonStr{
    if (jsonStr == nil) {
        return nil;
    }
    NSData *jsonData      = [jsonStr dataUsingEncoding:NSUTF8StringEncoding];
    NSError *error;
    NSArray *arr          = [NSJSONSerialization JSONObjectWithData:jsonData options:NSJSONReadingMutableContainers error:&error];
    return arr;
}
/**
 *  便利加载网络图片
 *
 *  @param imagV       图片容器
 *  @param imageUrlStr 图片地址字符串
 */
+(void)imageWithImagView:(UIImageView *)imagV andImageUrlStr :(NSString *)imageUrlStr {
    
    NSString *completeUrl = [NSString stringWithFormat:@"%@%@", MAIN_URL,imageUrlStr];
    NSURL *url            = [NSURL URLWithString:completeUrl];
    [imagV sd_setImageWithURL:url];
    
}
/**
 * 异步网络请求数据
 * @param：网络请求参数字典
 * @success：请求成功回调代码块
 * @fail:请求失败回调代码块
 */
+(void)asyncNetworkingUrl:(NSString *)url andDict:(NSDictionary *)param
                      success:(void (^)(NSDictionary *responseObject))success
                      failure:(void (^)(NSError *error))failure{
    
    //请求管理者
    AFHTTPRequestOperationManager *mgr    = [AFHTTPRequestOperationManager manager];
    
    //修改afn 支持新浪返回的JSON结构
    mgr.requestSerializer                 = [AFHTTPRequestSerializer serializer ];
    mgr.responseSerializer                = [AFJSONResponseSerializer serializer];
    [mgr.requestSerializer willChangeValueForKey:@"timeoutInterval"];
    mgr.requestSerializer.timeoutInterval = 8;
    [mgr.requestSerializer didChangeValueForKey:@"timeoutInterval"];
    NSString *urlStr=[NSString stringWithFormat:@"%@%@",MAIN_URL,url];
    NSLog(@"请求的网络地址%@",urlStr);
    //发送请求
    [mgr POST:urlStr parameters:param success:^(AFHTTPRequestOperation *operation, NSDictionary* responseObject) {
        
        //        NSLog(@"%@",responseObject);
        //数据保护
        if (responseObject != nil) {
            NSLog(@"获取成功");
            dispatch_async(dispatch_get_main_queue(), ^{
                success([self changeType:responseObject]); //成功回调
             });
            
            return ;
        }
    } failure:^(AFHTTPRequestOperation *operation, NSError *error) {
        NSLog(@"获取失败");
        
        dispatch_async(dispatch_get_main_queue(), ^{
            failure(error);//失败回调
        });
    
    }];
}
/**
 *  登录
 *
 *  @param mobile   用户注册手机
 *  @param email    用户注册邮箱
 *  @param password 用户密码
 *  @param success  成功responseObject
 *  @param failure  失败error
 */
+(void)login_mobile:(NSString *)mobile andlogin_email:(NSString *)email andlogin_password:(NSString *)password andpw:(NSString *)pw success:(void (^)(NSDictionary *))success failure:(void (^)(NSError *))failure
{
    NSMutableDictionary *dic = [[NSMutableDictionary alloc]initWithCapacity:1];
    
    dic[@"login_mobile"]     = mobile;
    dic[@"login_email"]      = email;
    dic[@"login_password"]   = password;
    dic[@"password"] = pw;
    
    
    [self asyncNetworkingUrl:@"/User/Login/" andDict:dic success:success failure:failure];
}
/**
 *  获取用户信息
 *
 *  @param uid     uid
 *  @param success 成功responseObject
 *  @param failure 失败error
 */
+(void)GetUserInFo_uid:(NSString *)uid success:(void (^)(NSDictionary *))success failure:(void (^)(NSError *))failure{
    NSMutableDictionary *dic = [[NSMutableDictionary alloc]initWithCapacity:1];
    
    dic[@"uid"]= uid;
    [self asyncNetworkingUrl:@"/User/Setting" andDict:dic success:success failure:failure];
    
}
/**
 *  保存用户信息
 *
 *  @param uid      uid
 *  @param email    email
 *  @param qianming 签名
 *  @param name     昵称
 *  @param qq       QQ
 *  @param success  成功responseObject
 *  @param failure  失败error
 */
+(void)SetUserInFo_uid:(NSString *)uid andUseremail:(NSString *)email andUserQianMing:(NSString *)qianming andUserName:(NSString *)name andUserQQ:(NSString *)qq success:(void (^)(NSDictionary *))success failure:(void (^)(NSError *))failure{
    NSMutableDictionary *dic = [[NSMutableDictionary alloc]initWithCapacity:1];
    dic[@"uid"]= uid;
    dic[@"email"]    = email;
    dic[@"qianming"] = qianming;
    dic[@"username"] = name;
    dic[@"qq"] = qq;
    [self asyncNetworkingUrl:@"/User/Setting/set" andDict:dic success:success failure:failure];
}
/**
 *  签到
 *
 *  @param uid     uid
 *  @param success 成功responseObject
 *  @param failure 失败error
 */
+(void)Sign_uid:(NSString *)uid andState:(NSString *)str success:(void (^)(NSDictionary *))success failure:(void (^)(NSError *))failure{
    NSMutableDictionary *dic = [[NSMutableDictionary alloc]initWithCapacity:1];
    dic[@"uid"]= uid;
    dic[@"action"] = str ;
    [self asyncNetworkingUrl:@"/User/Sign" andDict:dic success:success failure:failure];
}
/**
 *  获取收货地址列表
 *
 *  @param uid     uid
 *  @param success 成功responseObject
 *  @param failure 失败error
 */
+(void)Address_uid:(NSString *)uid success:(void (^)(NSDictionary *))success failure:(void (^)(NSError *))failure{
    NSMutableDictionary *dic = [[NSMutableDictionary alloc]initWithCapacity:1];
    dic[@"uid"]= uid;
    [self asyncNetworkingUrl:@"/User/Address/addresslist" andDict:dic success:success failure:failure];
}
+(void)Getcity_uid:(NSString *)uid success:(void (^)(NSDictionary *))success failure:(void (^)(NSError *))failure{
    [self asyncNetworkingUrl:@"/User/Address/GetAddessJson" andDict:nil success:success failure:failure];
    
}
/**
 *   添加收货地址
 *
 *  @param uid         用户id
 *  @param sheng       省
 *  @param shi         市
 *  @param qu          区
 *  @param info        详细
 *  @param youbian     邮编
 *  @param shoujianren 收件人
 *  @param mobile      手机号
 *  @param tell        座机
 *  @param success     成功
 *  @param failure     失败
 */
+(void)Addaddress_uid:(NSString *)uid andSheng:(NSString *)sheng andShi:(NSString *)shi andQu:(NSString *)qu andinfo:(NSString *)info andYouBian:(NSString *)youbian andShouJianRen:(NSString *)shoujianren andmobile:(NSString *)mobile andTell:(NSString *)tell success:(void (^)(NSDictionary *))success failure:(void (^)(NSError *))failure{
    NSMutableDictionary *dic = [[NSMutableDictionary alloc]initWithCapacity:1];
    dic[@"uid"]= uid;
    dic[@"sheng"] = sheng;
    dic[@"shi"] = shi;
    dic[@"xian"] = qu;
    dic[@"jiedao"] = info;
    dic[@"youbian"] = youbian;
    dic[@"shouhuoren"] = shoujianren;
    dic[@"mobile"] = mobile;
    dic[@"tell"] = tell;
    [self asyncNetworkingUrl:@"/User/Address" andDict:dic success:success failure:failure];
    
}
/**
 *  修改收货地址（设置默认、删除）
 *
 *  @param uid     uid
 *  @param Id      地址id
 *  @param action  动作
 *  @param success 成功
 *  @param failure 失败
 */
+(void)SetAddress_uid:(NSString *)uid andadressID:(NSString *)Id andAction:(NSString *)action success:(void (^)(NSDictionary *))success failure:(void (^)(NSError *))failure{
    NSMutableDictionary*dic = [[NSMutableDictionary alloc]initWithCapacity:1];
    dic[@"uid"] = uid;
    dic[@"id"] = Id;
    if ([action isEqualToString:@"2"]) {
        dic[@"action"] = @"del";
    }
    else if ([action isEqualToString:@"0"]) {
        dic[@"action"] = @"setdef";
    }
    [self asyncNetworkingUrl:@"/User/Address/addresscontrol" andDict:dic success:success failure:failure];
    
}
/**
 *  编辑收货地址
 *
 *  @param uid         <#uid description#>
 *  @param addId       <#addId description#>
 *  @param sheng       <#sheng description#>
 *  @param shi         <#shi description#>
 *  @param qu          <#qu description#>
 *  @param info        <#info description#>
 *  @param youbian     <#youbian description#>
 *  @param shoujianren <#shoujianren description#>
 *  @param mobile      <#mobile description#>
 *  @param tell        <#tell description#>
 *  @param success     <#success description#>
 *  @param failure     <#failure description#>
 */
+(void)BianJiaddress_uid:(NSString *)uid andAddId:(NSString *)addId andSheng:(NSString *)sheng andShi:(NSString *)shi andQu:(NSString *)qu andinfo:(NSString *)info andYouBian:(NSString *)youbian andShouJianRen:(NSString *)shoujianren andmobile:(NSString *)mobile andTell:(NSString *)tell success:(void (^)(NSDictionary *))success failure:(void (^)(NSError *))failure{
    
    NSMutableDictionary *dic = [[NSMutableDictionary alloc]initWithCapacity:1];
    dic[@"uid"]= uid;
    dic[@"id"] = addId;
    dic[@"sheng"] = sheng;
    dic[@"shi"] = shi;
    dic[@"xian"] = qu;
    dic[@"jiedao"] = info;
    dic[@"youbian"] = youbian;
    dic[@"shouhuoren"] = shoujianren;
    dic[@"mobile"] = mobile;
    dic[@"tell"] = tell;
    [self asyncNetworkingUrl:@"/User/Address/addressedit" andDict:dic success:success failure:failure];
    
}
/**
 *  获取账户明细
 *
 *  @param uid     uid
 *  @param type    获取种类
 *  @param page    页数
 *  @param success 成功
 *  @param failure 失败
 */
+(void)MoneyDetial_uid:(NSString *)uid andtype:(NSString *)type andpage:(NSString *)page success:(void (^)(NSDictionary *))success failure:(void (^)(NSError *))failure{
    NSMutableDictionary *dic = [[NSMutableDictionary alloc]initWithCapacity:1];
    dic[@"uid"] = uid ;
    dic[@"type"] = type;
    dic[@"page"] = page;
    [self asyncNetworkingUrl:@"/User/Accountlist" andDict:dic success:success failure:failure];
}
/**
 *  抢宝记录
 *
 *  @param uid     uid
 *  @param index   当前分类
 *  @param page    页数
 *  @param success 成功
 *  @param failure 失败
 */
+(void)GetBaoDetial_uid:(NSString *)uid andtypeIndex:(NSString *)index andpage:(NSString *)page success:(void (^)(NSDictionary *))success failure:(void (^)(NSError *))failure{
    NSMutableDictionary*dic = [[NSMutableDictionary alloc]initWithCapacity:1];
    dic[@"uid"] = uid;
    dic[@"page"] = page;
    if ([index intValue] == 0) {
        [self asyncNetworkingUrl:@"/User/Qiangbaolist" andDict:dic success:success failure:failure];
    }else if ([index intValue] == 1){
        [self asyncNetworkingUrl:@"/User/Qiangbaolist/Going" andDict:dic success:success failure:failure];
    }else{
        [self asyncNetworkingUrl:@"/User/Qiangbaolist/Publish" andDict:dic success:success failure:failure];
    }
    
}
/**
 *  获得宝物纪录
 *
 *  @param uid     uid
 *  @param success 成功
 *  @param failure 失败
 */
+(void)BaoDetial_uid:(NSString *)uid success:(void (^)(NSDictionary *))success failure:(void (^)(NSError *))failure{
    
    NSMutableDictionary *dic = [[NSMutableDictionary alloc]initWithCapacity:1];
    dic[@"uid"] = @"39";
    [self asyncNetworkingUrl:@"/User/Orderlist" andDict:dic success:success failure:failure];
    
}
/**
 *  塞单
 *
 *  @param uid     <#uid description#>
 *  @param success <#success description#>
 *  @param failure <#failure description#>
 */
+(void)sandan_uid:(NSString *)uid success:(void (^)(NSDictionary *responseObject))success
          failure:(void (^)(NSError *error))failure{
    
    NSMutableDictionary *dic = [[NSMutableDictionary alloc]initWithCapacity:1];
    dic[@"uid"] = uid;
    [self asyncNetworkingUrl:@"/User/Orderlist/shaidan" andDict:dic success:success failure:failure];

}

+(void)QBsandan_page:(NSString *)page andsid:(NSString *)sid success:(void (^)(NSDictionary *responseObject))success
           failure:(void (^)(NSError *error))failure{
    NSMutableDictionary *dic = [[NSMutableDictionary alloc]initWithCapacity:1];
    dic[@"uid"] = page;
    dic[@"sid"] = sid;
    [self asyncNetworkingUrl:@"/Index/Shaidan" andDict:dic success:success failure:failure];
}


/**
 *  点赞
 *
 *  @param uid     <#uid description#>
 *  @param state   <#state description#>
 *  @param success <#success description#>
 *  @param failure <#failure description#>
 */
+(void)sandanZan_uid:(NSString *)uid success:(void (^)(NSDictionary *responseObject))success
             failure:(void (^)(NSError *error))failure{
    
    NSMutableDictionary *dic = [[NSMutableDictionary alloc]initWithCapacity:1];
    dic[@"sd_id"] = uid;
    
    
    [self asyncNetworkingUrl:@"/User/Orderlist/ShaidanZan" andDict:dic success:success failure:failure];
    
    
}
/**
 *  发晒单
 *
 *  @param imgArr              <#imgArr description#>
 *  @param uid                 <#uid description#>
 *  @param titile              <#titile description#>
 *  @param info                <#info description#>
 *  @param shopiD              <#shopiD description#>
 *  @param qishu               <#qishu description#>
 *  @param success             <#success description#>
 *  @param failure             <#failure description#>
 *  @param uploadProgressBlock <#uploadProgressBlock description#>
 */
+ (void)userHeadImg:(NSArray *)imgArr anduid:(NSString *)uid andtitle:(NSString *)titile andinfo:(NSString *)info andshopID:(NSString *)shopiD andqishu:(NSString *)qishu
            success:(void (^)(NSDictionary *responseObject))success
            failure:(void (^)(NSError *error))failure   uploadProgressBlock:(void(^)(float uploadPercent,long long totalBytesWritten,long long totalBytesExpectedToWrite))uploadProgressBlock{
    NSMutableDictionary *dict = [[NSMutableDictionary alloc]initWithCapacity:1];
    dict[@"uid"] = uid;
    dict[@"title"] = titile;
    dict[@"content"] = info;
    dict[@"shopid"] = shopiD;
    dict[@"qishu"] = qishu;
    
    NSString *url = [NSString stringWithFormat:@"%@%@",MAIN_URL,@"/User/Orderlist/Addshaidan"];
    
    
    //请求管理者
    AFHTTPRequestOperationManager *manager = [AFHTTPRequestOperationManager manager];
    
    manager.responseSerializer = [AFJSONResponseSerializer serializer];
    manager.requestSerializer = [AFJSONRequestSerializer serializer];
    
    AFHTTPRequestOperation *operation = [manager POST:url parameters:dict constructingBodyWithBlock:^(id<AFMultipartFormData> formData) {
        
        int i = 0;
        //根据当前系统时间生成图片名称
        NSDate *date = [NSDate date];
        NSDateFormatter *formatter = [[NSDateFormatter alloc]init];
        [formatter setDateFormat:@"yyyy.MM.dd"];
        NSString *dateString = [formatter stringFromDate:date];
        for (UIImage *image in imgArr) {
            NSString *fileName = [NSString stringWithFormat:@"%@%d.png",dateString,i];
            NSData *imageData;
            imageData = UIImageJPEGRepresentation(image, 0.5);
            NSLog(@"图片二进制：%@",imageData);
            //            [formData appendPartWithFileData:imageData name:@"photo" fileName:fileName mimeType:@"image/jpg/png/jpeg"];
            [formData appendPartWithFileData:imageData name:[NSString stringWithFormat:@"photo%d",i] fileName:fileName mimeType:@"multipart/form-data"];
            i++;
        }
        
        
        //        [formData appendPartWithFileData:data name:@"userHeadImg" fileName:@"HeadImg.png" mimeType:@"multipart/form-data"];
        
        
    } success:^(AFHTTPRequestOperation *operation, id responseObject) {
        dispatch_async(dispatch_get_main_queue(), ^{
            success(responseObject); //成功回调
        });
    } failure:^(AFHTTPRequestOperation *operation, NSError *error) {
        dispatch_async(dispatch_get_main_queue(), ^{
            failure(error); //成功回调
        });
    }];
    
    
    [operation setUploadProgressBlock:^(NSUInteger bytesWritten, long long totalBytesWritten, long long totalBytesExpectedToWrite) {
        CGFloat percent = totalBytesWritten * 1.0 / totalBytesExpectedToWrite;
        uploadProgressBlock(percent,totalBytesWritten,totalBytesExpectedToWrite);
    }];
    
}
/**
 *  晒单详情
 *
 *  @param sdid    晒单id
 *  @param success <#success description#>
 *  @param failure <#failure description#>
 */
+(void)SDXQ_sd_id:(NSString *)sdid success:(void (^)(NSDictionary *))success failure:(void (^)(NSError *))failure{
    
    NSMutableDictionary *dic = [[NSMutableDictionary alloc]initWithCapacity:1];
    dic[@"sd_id"] = sdid;
    [self asyncNetworkingUrl:@"/User/Orderlist/ShaidanDetail" andDict:dic success:success failure:failure];
}

+ (void)userHeadImg:(NSArray *)imgArr anduid:(NSString *)uid success:(void (^)(NSDictionary *))success failure:(void (^)(NSError *))failure uploadProgressBlock:(void (^)(float, long long, long long))uploadProgressBlock{
    
    NSMutableDictionary *dict = [[NSMutableDictionary alloc]initWithCapacity:1];
    dict[@"uid"] = uid;
    NSString *url = [NSString stringWithFormat:@"%@%@",MAIN_URL,@"/User/Setting/UploadHeartImg"];
    
    //请求管理者
    AFHTTPRequestOperationManager *manager = [AFHTTPRequestOperationManager manager];
    
    manager.responseSerializer = [AFJSONResponseSerializer serializer];
    manager.requestSerializer = [AFJSONRequestSerializer serializer];
    
    AFHTTPRequestOperation *operation = [manager POST:url parameters:dict constructingBodyWithBlock:^(id<AFMultipartFormData> formData) {
        
        int i = 0;
        //根据当前系统时间生成图片名称
        NSDate *date = [NSDate date];
        NSDateFormatter *formatter = [[NSDateFormatter alloc]init];
        [formatter setDateFormat:@"yyyy.MM.dd"];
        NSString *dateString = [formatter stringFromDate:date];
        for (UIImage *image in imgArr) {
            NSString *fileName = [NSString stringWithFormat:@"%@.png",uid];
            NSData *imageData;
            imageData = UIImageJPEGRepresentation(image, 0.5);
            NSLog(@"图片二进制：%@",imageData);
            //            [formData appendPartWithFileData:imageData name:@"photo" fileName:fileName mimeType:@"image/jpg/png/jpeg"];
            [formData appendPartWithFileData:imageData name:[NSString stringWithFormat:@"photo%d",i] fileName:fileName mimeType:@"multipart/form-data"];
            i++;
        }
        
        
        //        [formData appendPartWithFileData:data name:@"userHeadImg" fileName:@"HeadImg.png" mimeType:@"multipart/form-data"];
        
    } success:^(AFHTTPRequestOperation *operation, id responseObject) {
        dispatch_async(dispatch_get_main_queue(), ^{
            success(responseObject); //成功回调
        });
    } failure:^(AFHTTPRequestOperation *operation, NSError *error) {
        dispatch_async(dispatch_get_main_queue(), ^{
            failure(error); //成功回调
        });
    }];
    [operation setUploadProgressBlock:^(NSUInteger bytesWritten, long long totalBytesWritten, long long totalBytesExpectedToWrite) {
        CGFloat percent = totalBytesWritten * 1.0 / totalBytesExpectedToWrite;
        uploadProgressBlock(percent,totalBytesWritten,totalBytesExpectedToWrite);
    }];
    
    
    
    
}
+(void)SDXQ_pinglu_sd_id:(NSString *)sdid anduid:(NSString *)uid andinfo:(NSString *)info success:(void (^)(NSDictionary *))success failure:(void (^)(NSError *))failure{
    NSMutableDictionary *dic = [[NSMutableDictionary alloc]initWithCapacity:1];
    dic[@"sd_id"] = sdid;
    dic[@"uid"] = uid;
    dic[@"pingcontent"] = info;
    [self asyncNetworkingUrl:@"/User/Orderlist/ShaidanPing" andDict:dic success:success failure:failure];
}

/**
 *  商品详情
 *
 *  @param gid     商品id
 *  @param uid     uid
 *  @param sid     同期商品id
 *  @param qishu   期数
 *  @param success <#success description#>
 *  @param failure <#failure description#>
 */
+ (void)ShangPinXiangQing_gid:(NSString *)gid anduid:(NSString *)uid andsid:(NSString *)sid andqishu:(NSString*)qishu success:(void (^)(NSDictionary *responseObject))success failure:(void (^)(NSError *error))failure{
    
    NSMutableDictionary *dic = [[NSMutableDictionary alloc]initWithCapacity:1];
    dic[@"gid"] = gid;
    dic[@"uid"] = uid;
    dic[@"sid"] = sid;
    dic[@"qishu"] = qishu;
    [self asyncNetworkingUrl:@"/Index/ShopDetail" andDict:dic success:success failure:failure];
}
+ (void)XiangQingPingLun_gid:(NSString *)gid andpage:(NSString *)sid andqishu:(NSString*)qishu andPage:(NSString *)page success:(void (^)(NSDictionary *responseObject))success failure:(void (^)(NSError *error))failure{
    
    NSMutableDictionary *dic = [[NSMutableDictionary alloc]initWithCapacity:1];
    dic[@"gid"] = gid;
    dic[@"sid"] = sid;
    dic[@"qishu"] = qishu;
    dic[@"page"] = page;
    [self asyncNetworkingUrl:@"/Index/ShopDetail/Golist" andDict:dic success:success failure:failure];
}
/**
 *  图文详情
 *
 *  @param gid     <#gid description#>
 *  @param success <#success description#>
 *  @param failure <#failure description#>
 */
+ (void)TuWenXiangQing_gid:(NSString *)gid success:(void (^)(NSDictionary *responseObject))success failure:(void (^)(NSError *error))failure{
    NSMutableDictionary *dic = [[NSMutableDictionary alloc]initWithCapacity:1];
    dic[@"gid"] = gid;
    [self asyncNetworkingUrl:@"/Index/ShopDetail/Tuwen" andDict:dic success:success failure:failure];
    
}

+(void)jisuan_gid:(NSString *)gid success:(void (^)(NSDictionary *))success failure:(void (^)(NSError *))failure{
    NSMutableDictionary *dic = [[NSMutableDictionary alloc]initWithCapacity:1];
    dic[@"gid"] = gid;
    [self asyncNetworkingUrl:@"/Index/ShopDetail/Chakanjisuan" andDict:dic success:success failure:failure];
    
}
+ (void)PersonalCenter_uid:(NSString *)uid success:(void (^)(NSDictionary *responseObject))success failure:(void (^)(NSError *error))failure{
    NSMutableDictionary *dic = [[NSMutableDictionary alloc]initWithCapacity:1];
    dic[@"uid"] = uid;
    [self asyncNetworkingUrl:@"/Index/User" andDict:dic success:success failure:failure];
}
+ (void)PersonalCenter_state:(NSInteger)state anduid:(NSString *)uid andpage:(NSInteger)page success:(void (^)(NSDictionary *responseObject))success failure:(void (^)(NSError *error))failure{
    NSMutableDictionary *dic = [[NSMutableDictionary alloc]initWithCapacity:1];
    dic[@"uid"] = uid;
    dic[@"page"] = [NSString stringWithFormat:@"%ld",(long)page];
    if (state == 0) {
        [self asyncNetworkingUrl:@"/Index/User/Qblist" andDict:dic success:success failure:failure];
    }else if (state == 1){
        [self asyncNetworkingUrl:@"/Index/User/Getlist" andDict:dic success:success failure:failure];
    }
    
    
}
+ (void)reg_mobile:(NSString *)mobile success:(void(^)(NSDictionary *))success failure:(void(^)(NSError *))failure{
    NSMutableDictionary *dic = [[NSMutableDictionary alloc]initWithCapacity:1];
    dic[@"mobile"] = mobile;
    [self asyncNetworkingUrl:@"/User/MobileVerify" andDict:dic success:success failure:failure];
}
+ (void)verify:(NSString *)verify andMobile:(NSString *)mobile
       andQQ:(NSString *)QQ success:(void(^)(NSDictionary*))success failure:(void(^)(NSError*))failure{
    NSMutableDictionary *dic = [[NSMutableDictionary alloc]initWithCapacity:1];
    dic[@"verify"] = verify;
    dic[@"mobile"] = mobile;
    dic[@"QQ"] = QQ;
    [self asyncNetworkingUrl:@"/User/Zhuce/yanzhen" andDict:dic success:success failure:failure];
}
+ (void)verifyXiuGai:(NSString *)verify andMobile:(NSString *)mobile success:(void(^)(NSDictionary*))success failure:(void(^)(NSError*))failure{
    NSMutableDictionary *dic = [[NSMutableDictionary alloc]initWithCapacity:1];
    dic[@"verify"] = verify;
    dic[@"mobile"] = mobile;
    [self asyncNetworkingUrl:@"/User/Setting/DuanxinVerify" andDict:dic success:success failure:failure];
}
+ (void)newPassword:(NSString*)password andMobile:(NSString *)mobile success:(void(^)(NSDictionary*))success failure:(void(^)(NSError*))failure{
    NSMutableDictionary *dic = [[NSMutableDictionary alloc]initWithCapacity:1];
    dic[@"password"] = password;
    dic[@"mobile"] = mobile;
    [self asyncNetworkingUrl:@"/User/Setting/ResetPassword" andDict:dic success:success failure:failure];
}
+ (void)password:(NSString*)password andMobile:(NSString *)mobile success:(void(^)(NSDictionary*))success failure:(void(^)(NSError*))failure{
    NSMutableDictionary *dic = [[NSMutableDictionary alloc]initWithCapacity:1];
    dic[@"password"] = password;
    dic[@"mobile"] = mobile;
    [self asyncNetworkingUrl:@"/User/Zhuce/" andDict:dic success:success failure:failure];
}
+ (void)shouYesuccess:(void (^)(NSDictionary *responseObject))success
              failure:(void (^)(NSError *error))failure{
 [self asyncNetworkingUrl:@"/Index/Shouye" andDict:nil success:success failure:failure];
}
/**
 *  商品列表
 *
 *  @param class
 *  @param sort
 *  @param page 
 */
+ (void)shangpinClass:(NSString*)class sort:(NSString*)sort page:(NSString*)page success:(void (^)(NSDictionary *responseObject))success
              failure:(void (^)(NSError *error))failure{
   NSMutableDictionary *dic = [[NSMutableDictionary alloc]initWithCapacity:1];
    dic[@"class"] = class;
    dic[@"sort"]  = sort;
    dic[@"page"]  = page;
   [self asyncNetworkingUrl:@"/Index/Shoplist" andDict:dic success:success failure:failure];
}
/**
 *  商品列表
 *
 *  @param name;
 
 */
+ (void)searchName:(NSString *)name sort:(NSString *)sort page:(NSString *)page success:(void (^)(NSDictionary *responseObject))success
           failure:(void (^)(NSError *error))failure{

NSMutableDictionary *dic = [[NSMutableDictionary alloc]initWithCapacity:1
];
    dic[@"sort"] = sort;
    dic[@"name"] = name;
    dic[@"page"] = page;
    [self asyncNetworkingUrl:@"/Index/Shoplist/Search" andDict:dic success:success failure:failure];
}
//搜索热门
+ (void)searchHotsuccess:(void (^)(NSDictionary *responseObject))success
                 failure:(void (^)(NSError *error))failure{
[self asyncNetworkingUrl:@"/Index/Shoplist/Hotso" andDict:nil success:success failure:failure];
}
//首页十元

+ (void)shouYeTenpage:(NSString *)page success:(void (^)(NSDictionary *responseObject))success failure:(void (^)(NSError *error))failure{
    NSMutableDictionary * dic = [[NSMutableDictionary alloc]initWithCapacity:1];
    dic[@"page"] = page;

[self asyncNetworkingUrl:@"/Index/Shouye/Ten" andDict:dic success:success failure:failure];
}

//首页限时
+ (void)shouYeXSccess:(void (^)(NSDictionary *responseObject))success
              failure:(void (^)(NSError *error))failure{
[self asyncNetworkingUrl:@"/Index/Shouye/XS" andDict:nil success:success failure:failure];
}
//即将揭晓
+ (void)soonPublicPage:(NSString *)page success:(void (^)(NSDictionary *responseObject))success failure:(void (^)(NSError *error))failure{
    NSMutableDictionary * dic = [[NSMutableDictionary alloc]initWithCapacity:1];
    dic[@"page"] = page;
    [self asyncNetworkingUrl:@"/Index/Zuixin" andDict:dic success:success failure:failure];
}
//购物车信息
+ (void)buybuybuyid:(NSString *)gid success:(void (^)(NSDictionary *responseObject))success failure:(void (^)(NSError *error))failure{
    NSMutableDictionary * dic = [[NSMutableDictionary alloc]initWithCapacity:1];
    
    dic[@"gid"] = gid;
    [self asyncNetworkingUrl:@"/Index/Go/Cart" andDict:dic success:success failure:failure];
}
@end
